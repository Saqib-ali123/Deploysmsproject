# Generated by Django 5.0.3 on 2024-04-26 22:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('teacher', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassRoomType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name': 'Class Room Type',
                'verbose_name_plural': 'Class Room Types',
                'db_table': 'ClassRoomType',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
                'db_table': 'Country',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_name', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'db_table': 'Department',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
                'db_table': 'Role',
            },
        ),
        migrations.CreateModel(
            name='SchoolYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_name', models.CharField(max_length=250)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
            options={
                'verbose_name': 'School Year',
                'verbose_name_plural': 'School Years',
                'db_table': 'SchoolYear',
            },
        ),
        migrations.CreateModel(
            name='YearLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_name', models.CharField(max_length=250)),
                ('level_order', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Year Level',
                'verbose_name_plural': 'Year Levels',
                'db_table': 'YearLevel',
            },
        ),
        migrations.CreateModel(
            name='BankingDetail',
            fields=[
                ('account_no', models.BigIntegerField(primary_key=True, serialize=False, unique=True)),
                ('ifsc_code', models.BigIntegerField()),
                ('holder_name', models.CharField(max_length=255)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Banking Detail',
                'verbose_name_plural': 'Banking Details',
                'db_table': 'BankingDetail',
            },
        ),
        migrations.CreateModel(
            name='ClassRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_name', models.CharField(max_length=200)),
                ('capacity', models.IntegerField()),
                ('room_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='director.ClassRoomType')),
            ],
            options={
                'verbose_name': 'Class Room',
                'verbose_name_plural': 'Class Rooms',
                'db_table': 'ClassRoom',
            },
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_no', models.CharField(max_length=250)),
                ('gender', models.CharField(max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Director',
                'verbose_name_plural': 'Directors',
                'db_table': 'Director',
            },
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('start_period_time', models.TimeField()),
                ('end_period_time', models.TimeField()),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='director.schoolyear')),
            ],
            options={
                'verbose_name': 'Period',
                'verbose_name_plural': 'Periods',
                'db_table': 'Period',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='director.country')),
            ],
            options={
                'verbose_name': 'State',
                'verbose_name_plural': 'States',
                'db_table': 'State',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='director.state')),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'Cities',
                'db_table': 'City',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('house_no', models.IntegerField()),
                ('area_code', models.IntegerField()),
                ('address_line', models.CharField(max_length=250)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('city', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='director.city')),
                ('country', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='director.country')),
                ('state', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='director.state')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
                'db_table': 'Address',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(max_length=250)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='director.department')),
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subjects',
                'db_table': 'Subject',
            },
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term_number', models.IntegerField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='director.schoolyear')),
            ],
            options={
                'verbose_name': 'Term',
                'verbose_name_plural': 'Terms',
                'db_table': 'Term',
            },
        ),
        migrations.CreateModel(
            name='ClassPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='teacher.teacher')),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='director.classroom')),
                ('end_time', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='end_time', to='director.period')),
                ('start_time', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='start_time', to='director.period')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='director.subject')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='director.term')),
            ],
            options={
                'verbose_name': 'ClassPeriod',
                'verbose_name_plural': 'ClassPeriods',
                'db_table': 'ClassPeriod',
            },
        ),
    ]
